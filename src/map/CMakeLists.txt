cmake_minimum_required(VERSION 3.12)

include(map_kernel_stage.v1.cmake)
include(map_fusion_stage.cmake)

add_library(map OBJECT)
target_link_libraries(map PUBLIC kernel::ref)
if(MAPNN_BUILD_WITH_SSE42)
    include(map_optimal_stage.x86_64.cmake)
    target_link_libraries(map PUBLIC kernel::ncnn)
    target_link_libraries(map PUBLIC kernel::mnn)
elseif(MAPNN_BUILD_WITH_NEON)
    include(map_optimal_stage.arm32.cmake)
    target_link_libraries(map PUBLIC kernel::ncnn)
    target_link_libraries(map PUBLIC kernel::mnn)
    target_link_libraries(map PUBLIC kernel::tengine)
elseif(MAPNN_BUILD_WITH_ASIMD)
    include(map_optimal_stage.arm64.cmake)
    target_link_libraries(map PUBLIC kernel::ncnn)
    target_link_libraries(map PUBLIC kernel::mnn)
    target_link_libraries(map PUBLIC kernel::tengine)
else()
    include(map_optimal_stage.none.cmake)
endif()
target_link_libraries(map PRIVATE core)
target_include_directories(map PUBLIC ${CMAKE_CURRENT_LIST_DIR})
target_include_directories(map PUBLIC ${CMAKE_CURRENT_BINARY_DIR})
